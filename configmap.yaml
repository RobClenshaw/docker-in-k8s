apiVersion: v1
data:
  Dockerfile: "# This file is copied and modified from https://raw.githubusercontent.com/microsoft/mssql-docker/master/linux/preview/examples/mssql-server-linux-non-root/Dockerfile\n#
    Which is linked from: https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-docker?view=sql-server-2017#buildnonrootcontainer\n\nFROM
    mcr.microsoft.com/mssql/server:2017-CU20-ubuntu-16.04\n\n# Create non-root user
    and update permissions\n#\nRUN useradd -M -s /bin/bash -u 10001 -g 0 mssql\nRUN
    mkdir -p -m 770 /var/opt/mssql && chgrp -R 0 /var/opt/mssql\n\n# Grant sql the
    permissions to connect to ports <1024 as a non-root user\n#\nRUN setcap 'cap_net_bind_service+ep'
    /opt/mssql/bin/sqlservr\n\n# Allow dumps from the non-root process\n# \nRUN setcap
    'cap_sys_ptrace+ep' /opt/mssql/bin/paldumper\nRUN setcap 'cap_sys_ptrace+ep' /usr/bin/gdb\n\n#
    Add an ldconfig file because setcap causes the os to remove LD_LIBRARY_PATH\n#
    and other env variables that control dynamic linking\n#\nRUN mkdir -p /etc/ld.so.conf.d
    && touch /etc/ld.so.conf.d/mssql.conf\nRUN echo -e \"# mssql libs\\n/opt/mssql/lib\"
    >> /etc/ld.so.conf.d/mssql.conf\nRUN ldconfig\n\n\n# Following code is taken and
    tweaked from: https://github.com/docker-library/postgres/blob/9c5ca99fdc9af3e2cbefbc3bfa3348fe12fe9514/11/Dockerfile\n#\n#
    grab gosu for easy step-down from root\n# https://github.com/tianon/gosu/releases\nENV
    GOSU_VERSION 1.12\nRUN set -eux; \\\n\tsavedAptMark=\"$(apt-mark showmanual)\";
    \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends ca-certificates
    wget gnupg-curl gnupg gnupg2 dirmngr; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\tdpkgArch=\"$(dpkg
    --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O /usr/local/bin/gosu
    \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";
    \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";
    \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver keyserver.ubuntu.com
    --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify
    /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\tgpgconf --kill gpg-agent; \\\n\trm
    -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\tapt-mark auto '.*' > /dev/null;
    \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \\\n\tapt-get
    purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\tchmod
    +x /usr/local/bin/gosu; \\\n\tgosu --version; \\\n\tgosu nobody true\n\nCOPY ./entrypoint.sh
    /entrypoint.sh\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\nCMD [ ]\n"
  entrypoint.sh: |-
    #!/bin/bash

    if [ "$(id -u)" = '0' ]; then
        # fix up ownership so mssql user can read and write
        [[ ! -z $MSSQL_DATA_DIR ]] && chown -R mssql $MSSQL_DATA_DIR
        [[ ! -z $MSSQL_LOG_DIR ]] && chown -R mssql $MSSQL_LOG_DIR
        [[ ! -z $MSSQL_BACKUP_DIR ]] && chown -R mssql $MSSQL_BACKUP_DIR
        [[ ! -z $MSSQL_MASTER_DATA_FILE ]] && chown -R mssql $MSSQL_MASTER_DATA_FILE
        [[ ! -z $MSSQL_MASTER_LOG_FILE ]] && chown -R mssql $MSSQL_MASTER_LOG_FILE
        [[ ! -z $MSSQL_ERROR_LOG_FILE ]] && chown -R mssql $MSSQL_ERROR_LOG_FILE

        chown -R mssql /var/opt/mssql

        # then restart script as mssql user
        exec gosu mssql "$BASH_SOURCE" "$@"
    fi

    /opt/mssql/bin/sqlservr $@
kind: ConfigMap
metadata:
  creationTimestamp: "2021-10-01T13:39:05Z"
  name: config
  namespace: default
  resourceVersion: "18541"
  uid: d0872e78-db30-453f-b39d-a92dcfb5d8a6
